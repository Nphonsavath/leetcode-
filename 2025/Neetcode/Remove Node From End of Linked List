# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        dummy = ListNode(0, head)
        curr = dummy

        for i in range(n+1):
            curr = curr.next

        second = dummy
        while (curr):
            curr = curr.next
            second = second.next
        
        second.next = second.next.next
        return dummy.next

The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz

Time Complexity: O(n)
Space Complexity: O(1)
