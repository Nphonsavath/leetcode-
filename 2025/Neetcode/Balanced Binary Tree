# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        self.sol = True

        def dfs(root):
            if not root or not self.sol:
                return 0
            left = dfs(root.left)
            right = dfs(root.right)
            if (abs(left-right) > 1):
                self.sol = False
            return max(left, right) + 1

        dfs(root)
        return self.sol
The number of nodes in the tree is in the range [0, 1000].
-1000 <= Node.val <= 1000
Time Complexity: O(n)
Space Complexity: O(n)
