# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:

        stack = []
        curr = float('-inf')

        while root or stack:
            while root:
                stack.append(root)
                root = root.left

            root = stack.pop()
            if root.val <= curr:
                return False
            curr = root.val
            root = root.right
            
        return True
1 <= The number of nodes in the tree <= 1000.
-1000 <= Node.val <= 1000
Time Complexity: O(n)
Space Complexity: O(n)
