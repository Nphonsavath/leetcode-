Heap (default min heap in python)
  heap = []
  heapq.heappush(heap, item)
    Push the value item onto the heap, maintaining the heap invariant.

  heapq.heappop(heap)
  Pop and return the smallest item from the heap, maintaining the heap invariant. If the heap is empty, IndexError is raised. To access the smallest item without popping it, use heap[0].

  len(heap)

Set
  seen = set()
  set.add(item)
    The add() method adds a given element to a set. If the element is already present, it doesn't add any element.

isalnum()
  The method str.isalnum() checks if the character (or string) consists only of alphanumeric characters — i.e., letters (a-z, A-Z) and digits (0-9).
    Time Complexity: O(1) for single char
                     O(n) for string
    Space Complexity: O(1)

lower()
  The lower() method returns a string where all characters are lower case.  Symbols and Numbers are ignored.
    Time Complexity: O(n) for iterating through entire string
    Space Complexity: O(n) for new string created

sorted()
  Returns a new sorted list from any iterable (like a list, string, tuple, set, dictionary, any iterable, custom objects).
  Does not modify the original — unlike .sort() which sorts a list in-place.
  uses timsort (hybrid of merge sort and insertion sort)
  Time Complexity: O(n log n)
  Space Complexity: O(n)

sort()
  Only on lists
  Sort in-place and returns none
  uses timsort (hybrid of merge sort and insertion sort)
  Changes original
  Time Complexity: O(n log n)
  Space Complexity: O (n)?

Why you can't add list to set?
  lists are mutable and unhashable, therefore set.add(tuple([..])) because tuple is hashable. Since lists can change, their hash could become invalid.
  
