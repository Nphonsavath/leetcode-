/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
       ListNode slow = head;
       ListNode fast = head;

       while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
       }

       ListNode reversedHead = reversed(slow);
       ListNode curr = head;

       while (reversedHead != null) {
            if (curr.val != reversedHead.val){
                return false;
            }
            curr = curr.next;
            reversedHead = reversedHead.next;
       }

       return true;
    }

    public ListNode reversed(ListNode node) {
        ListNode prev = null, head = node;
        while (head != null) {
            ListNode next = head.next;
            head.next = prev;
            prev = head;
            head = next;
        }

        return prev;
    }
}
