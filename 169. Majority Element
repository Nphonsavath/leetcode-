class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int max = 0, solution = -1;
        

        for (int i = 0; i < nums.length; i++) {
            map.put(nums[i], map.getOrDefault(nums[i], 0) +1);
            max = Math.max(map.get(nums[i]), max);
        }

        for (int key : map.keySet()) {
            if (map.get(key) == max) {
                solution = key;
            }
        }

        return solution;
    }
}

/*
class Solution {
    public int majorityElement(int[] nums) {
        int ans = nums[0], count = 1; 
        
        for (int i = 1; i < nums.length; i++) {    
            if (ans != nums[i]) { 
                count--;//if meet different value,count--
            } else { //if meet the same value, count++ 
                count++;
            } 
            //if the current best ans is no longer the majority
            // i.e. it's count is not larger than i / 2
            if (count == 0) {
                count = 1;
                ans = nums[i];
            }
        }

        return ans;
}
}*/
