/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        ListNode middleNode = middle(head); // 4
        ListNode nextMiddleNode = middleNode.next; // 5
        middleNode.next = null;
        ListNode p2 = reverse (nextMiddleNode);
        ListNode p1 = head;
        ListNode p1Next;
        while (p1!= null && p2!= null) {
            p1Next = p1.next;
            p1.next = p2;
            p1 = p2;
            p2 = p1Next;
        }
        
    }

    public ListNode middle(ListNode head) { //for 1 2 3 4 5 6, slow = 4
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }

    public ListNode reverse(ListNode head) {
        ListNode prev = null, curr = head, next = null;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
